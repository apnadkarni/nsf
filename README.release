Steps for a beta release:
  - docs:
     * update all docs with asciidoc in doc/
  - code:
     * tcl 8.5: 
       * configure with --enable-development
         make test
       * configure with --enable-memcount=yes
         make test 2>&1|cat |fgrep Overall
       * configure with --enable-development and activate valgrind in Makefile
         make test 2>&1|cat |fgrep "definitely lost"
         (8.5.11 ok, when every test returns "40 bytes in 2 blocks")
         (8.5.14 ok, when on test reurns "64 bytes in 1 blocks")
       * get rid of non-ansi-c
         make "CFLAGS_DEFAULT=-ansi -pedantic"
         (warnings are ok, errors not)
       * complile with clang
         make "CC=clang"
         make "CC=clang" test
       * run static analysis:
         cppcheck --enable=all -DNDEBUG *.c
	 /opt/local/bin/scan-build-mp-3.7 -enable-checker alpha make
       * run Coverity (7.6.0, requires gcc 4.8):
       	 (sudo port install gcc48)
	 (download Coverity Build Tool from https://scan.coverity.com/download/)
	 make clean
	 rm -rf cov-int/
         /usr/local/cov-analysis-macosx-7.6.0/bin/cov-build --dir cov-int make CC=gcc-mp-4.8
	 tar czvf /tmp/nsf.tgz cov-int

	 curl --form token=jJ1QoqZ2Ksriz6JXtI3aHg \
	   --form email=<email> \
	   --form file=@/tmp/nsf.tgz \
	   --form version="`git describe --tags`" \
  	   --form description="maintenance checkout" \
	     https://scan.coverity.com/builds?project=Next+Scripting+Framework


       * configure without --enable-development
         make install
         make install-aol
         test with naviserver/aolserver (xowiki/xowf)
     * tcl 8.6: 
       * configure with --enable-development
         make test
       * configure with --enable-memcount=yes
         make test 2>&1|cat |fgrep Overall
       * configure with --enable-development and activate valgrind in Makefile
         make test 2>&1|cat |fgrep "definitely lost"
         (8.6b2 ok, when every test returns "40 bytes in 2 blocks")
         (8.6.0 ok, when every test returns "0 bytes in 0 blocks")

   - build windows binaries
   - test tk apps under windows

   - Announcement
      * Summarize changes since the last release in doc/Announce-VERSION
        As source use e.g.
            git log --date-order --date=short|less
	    ~/scripts/git-changelog2  -- 2.0b5..HEAD --no-merges > ChangeLog-2.0b3-2.0
      * Run spell checker over announcement + ChangeLog
      * git add announcement 

   - build tar
       * make tar
       * check content of tar file
         tar ztvf ../nsf2.0.tar.gz |sort -rn -k 5,6|less

   - tag version in git and commit
       git tag -a 2.0b5 -m 2.0b5
       git push --tags
       git push : 2.0.0
       # git push --follow-tags
       # git push commit

   - update archive at sourceforge
      * create folder with version name
      * upload tar file to new folder
      * upload announce to new folder and rename it to README

   - update web site
     * stefan, please add recommended steps here

   - prepare next release:
       rename folder containing nsf to e.g. nsf2.0b4
       update version number in 
         * configure.in
	 * library/nx/nx.tcl
         * library/nx/pkgIndex.tcl
	 * library/xotcl/library/xotcl2.tcl
       autoconf
       ./configure ....



