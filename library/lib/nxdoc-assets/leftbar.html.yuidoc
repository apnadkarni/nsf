[:!let owned_parts [:navigatable_parts $project_entities]]
<div class="nav">
[:for feature [dict keys $owned_parts]  {
  <div id="[$feature name]List" class="module">
        <h4>[$feature pretty_plural]</h4>
	<ul class="content">
	  [:for inst [dict get $owned_parts $feature] {
	  [:!let css "" ]
	  [:? {[:info has type [$feature part_class]] && [current] eq $inst} {
	  [:!let css "selected" ]
	  }]
	  [:? {[info exists filter_available] && [dict exists $self_owned_parts $feature]} {
	  [:! lappend css [expr {[$inst pinfo get -default 0 bundle call-protected]?"protected":""}]]
	  [:! lappend css [expr {[$inst !get @deprecated]?"deprecated":""}]]
	  [:! lappend css [$inst statustoken]]
	  [:!let css [linsert $css 0 filter]]
	  }]
	  [:!let css [join $css " "]]
	  [:!let iscript [join [list [list set top_entity [:origin]] [list set source_anchor [:fit [$inst print_name] 30]] [list set title [$inst print_name]] [list set cssclass ""]] \n]]
	  <li class="$css">[$inst render -initscript $iscript link]</li>
	  }]
    </ul>
  </div>
}]
</div>
