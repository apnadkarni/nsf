<h2>
  Command <b property="yui:name">[:print_name -status]</b>
</h2>
<div class="description summary" property="yui:description">
  [:as_text]
</div>
<span style='display:block; color: red'>[join [:pinfo get -default "" validation] <br>]</span>
<div class="detail" >
  <code>[:? {[info exists :@return] && [${:@return} @spec] ne ""} {&lt;<span property="yui:type">[${:@return} @spec]</span>&gt;} ]
    <strong style="font-weight: bold;" property="yui:name">${:name}</strong>
    <span class="var">[:pinfo get -default "" bundle parametersyntax]</span>
  </code>    
  [:?var :@command {
  <div class="description">
    <div rel="yui:properties" resource="#properties">
      <div class="section field details">
	<h3 id="properties">Subcommands</h3>
	<div class="section field member"
             rel="yui:member"  resource="#">
	  <div class="content" rel="yui:properties">
            <code>
              [:for sub [:!get -sortedby name @command] {
              <span rel="yui:property"
                    resource="#command_[$sub name]">                                        
		<a class=""
		   href="#command_[$sub name]" property="yui:name"
		   title="[$sub name]">[$sub name]</a>
              </span>
	      }]
            </code>
	  </div>
	</div>
	<hr>
	<div class="content">
	  [:for sub [:!get -sortedby name @command] {
	  <div rel="yui:property">
            <h4><a name="command_[$sub name]" property="yui:name">[$sub print_name]</a>
            </h4>
            <div class="detail">
	      <code>[:? {[$sub eval {info exists :@return}] && [[$sub @return] @spec] ne ""} {&lt;<span property="yui:type">[[$sub @return] @spec]</span>&gt;} ]
		<strong property="yui:name">${:name} [$sub name]</strong>
		[$sub pinfo get -default "" bundle parametersyntax]
	      </code>
              <div class="description" property="yui:description">
		[$sub as_text]
		[:?objvar $sub @parameter {
		<dl rel="yui:parameters">
		  <dt>Parameters:</dt>
		  [:for param  [$sub !get @parameter] {
		  <dd rel="yui:parameter">
		    <code><span property="yui:name">[$param name]</span>
		      [:? {[$param eval {info exists :@spec}] && [$param @spec] ne ""} {&lt;<span property="yui:type">[$param @spec]</span>&gt;}]
		    </code>
		    <span property="yui:description">[$param as_text]</span>
	<span style='display:block; color: red'>[join [$param pinfo get -default "" validation] <br>]</span>
		  </dd>
		  }]
		</dl>
		}]
		[:?objvar $sub @return {
		[:!let subreturn [$sub @return]]
		<dl>
		  <dt>Returns:
		    <code property="yui:return">
		  </code></dt>
		  <dd property="yui:returnInfo">[$subreturn as_text]<span style='display:block; color:
		  red'>[join [$subreturn pinfo get -default "" validation] <br>]</span></dd>
		</dl>
		}]
              </div>
            </div>	
            <hr />
	  </div>
	  }]
	</div>
      </div>
    </div>
    </div>
    } - {
    <div class="section command details">
      <div class="description">
    [:?var :@parameter {
    <dl rel="yui:parameters">
      <dt>Parameters:</dt>
      [:for param [:!get @parameter] {
      <dd rel="yui:parameter">
	<code><span property="yui:name">[$param name]</span>
          [:? {[$param eval {info exists :@spec}] && [$param @spec] ne ""} {&lt;<span property="yui:type">[$param @spec]</span>&gt;}]
	</code>
	[$param statusmark]
	<span property="yui:description">[$param as_text]</span>
	<span style='display:block; color: red'>[join [$param pinfo get -default "" validation] <br>]</span>
      </dd>
      }]
    </dl>
    }]
    
    [:?var :@return {
    <dl>
      <dt>Returns:
	<code property="yui:return">
      </code></dt>
      <dd property="yui:returnInfo">[${:@return} as_text]</dd>
    </dl>
    }]
  </div>
  </div>
  }]
</div>







  
